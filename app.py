import streamlit as st
import pandas as pd
import string

# Simulamos un glosario biling√ºe de ling√º√≠stica de corpus
data = {
    "t√©rmino_es": ["concordancia", "frecuencia de tokens", "n-grama", "etiquetado POS", "collocaci√≥n"],
    "t√©rmino_en": ["concordance", "token frequency", "n-gram", "POS tagging", "collocation"],
    "definici√≥n_es": [
        "Lista de ocurrencias de una palabra clave en su contexto inmediato.",
        "N√∫mero de veces que un token aparece en un corpus.",
        "Secuencia contigua de n elementos ling√º√≠sticos.",
        "Asignaci√≥n autom√°tica de categor√≠as gramaticales a palabras.",
        "Combinaci√≥n frecuente de palabras que aparecen juntas m√°s de lo esperado."
    ],
    "definici√≥n_en": [
        "A list of occurrences of a keyword in its immediate context.",
        "The number of times a token appears in a corpus.",
        "A contiguous sequence of n linguistic elements.",
        "Automatic assignment of grammatical categories to words.",
        "A frequent combination of words appearing together more than expected."
    ],
    "categor√≠a": ["b√∫squeda", "estad√≠stica", "frecuencia", "an√°lisis morfosint√°ctico", "combinatoria"]
}

df = pd.DataFrame(data)

# Configuraci√≥n general
st.set_page_config(page_title="Glosario Ling√º√≠stica de Corpus", layout="wide")
st.title("üìò Glosario Biling√ºe de Ling√º√≠stica de Corpus")

# Selecci√≥n de idioma
idioma = st.radio("Selecciona el idioma de visualizaci√≥n:", ["Espa√±ol", "Ingl√©s"], horizontal=True)

# Campo de b√∫squeda libre
busqueda = st.text_input("üîç Buscar t√©rmino:")

# Navegaci√≥n alfab√©tica
letras = list(string.ascii_uppercase)
letra_sel = st.selectbox("üìö Filtrar por letra inicial del t√©rmino:", letras)

# Funci√≥n auxiliar para aplicar filtros
def filtrar_glosario(df, idioma, busqueda, letra):
    if idioma == "Espa√±ol":
        campo_termino = "t√©rmino_es"
        campo_def = "definici√≥n_es"
    else:
        campo_termino = "t√©rmino_en"
        campo_def = "definici√≥n_en"

    df_filtrado = df[df[campo_termino].str.upper().str.startswith(letra.upper())]

    if busqueda:
        df_filtrado = df_filtrado[df_filtrado[campo_termino].str.contains(busqueda, case=False)]

    df_mostrar = df_filtrado[[campo_termino, campo_def, "categor√≠a"]]
    df_mostrar.columns = ["T√©rmino", "Definici√≥n", "Categor√≠a"]
    return df_mostrar

# Mostrar resultados
resultado = filtrar_glosario(df, idioma, busqueda, letra_sel)

if not resultado.empty:
    st.table(resultado)
else:
    st.warning("No se encontraron t√©rminos que coincidan con los filtros.")

# Pie de p√°gina
st.markdown("---")
st.markdown("üìö Proyecto en desarrollo por Isa ¬∑ Ling√º√≠stica computacional ¬∑ Sema√≠nein üß†")
